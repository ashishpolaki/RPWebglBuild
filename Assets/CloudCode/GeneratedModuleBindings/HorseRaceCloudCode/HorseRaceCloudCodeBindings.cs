// This file was generated by Cloud Code Bindings Generator. Modifications will be lost upon regeneration.
using System.Collections.Generic;
using System.Threading.Tasks;
using UGS;

namespace Unity.Services.CloudCode.GeneratedBindings
{
    public class HorseRaceCloudCodeBindings
    {
        #region Strings
        public const string MODULE = "HorseRaceCloudCode";

        //CloudcodeFunction Names
        public const string REGISTER_VENUE = "RegisterVenue";
        public const string SCHEDULE_RACE = "RaceScheduleTimings";
        public const string VENUE_CHECKIN = "CheckedInVenue";
        public const string JOIN_RACE_REQUEST = "RaceJoinRequest";
        public const string CONFIRM_RACE_CHECKIN = "ConfirmRaceCheckIn";
        public const string SET_VENUE_NAME = "SetVenueName";
        public const string STARTRACE = "StartRace";
        public const string RACE_RESULTS = "RaceResults";
        #endregion

        readonly ICloudCodeService k_Service;

        public HorseRaceCloudCodeBindings(ICloudCodeService service)
        {
            k_Service = service;
        }
        public async Task<VenueRegistrationResponse> RegisterVenue(VenueRegistrationRequest _venueData)
        {
            return await k_Service.CallModuleEndpointAsync<VenueRegistrationResponse>(MODULE, REGISTER_VENUE,
                 new Dictionary<string, object>() { { "venueData", _venueData } });
        }
        public async Task<RaceScheduleResponse> ScheduleRaceTimings(string venueName, RaceScheduleRequest _raceData)
        {
          return  await k_Service.CallModuleEndpointAsync<RaceScheduleResponse>(MODULE, SCHEDULE_RACE,
               new Dictionary<string, object>() { { "venueName", venueName }, { "raceScheduleRequest", _raceData } });
        }
        public async Task<VenueCheckInResponse> VenueCheckIn(string hostID, string dateTime)
        {
            return await k_Service.CallModuleEndpointAsync<VenueCheckInResponse>(MODULE, VENUE_CHECKIN,
                 new Dictionary<string, object>() { { "hostId", hostID }, { "dateTimeString", dateTime } });
        }

        public async Task<JoinRaceResponse> RequestRaceJoin(string hostID, string dateTime)
        {
            return await k_Service.CallModuleEndpointAsync<JoinRaceResponse>(MODULE, JOIN_RACE_REQUEST,
                                 new Dictionary<string, object>() { { "hostID", hostID }, { "dateTimeString", dateTime } });
        }

        public async Task<bool> ConfirmRaceCheckIn(string hostID, string playerName)
        {
            return await k_Service.CallModuleEndpointAsync<bool>(MODULE, CONFIRM_RACE_CHECKIN,
                                 new Dictionary<string, object>() { { "hostID", hostID }, { "playerName", playerName } });
        }
        public async Task<StartRaceResponse> StartRace(StartRaceRequest startRaceRequest)
        {
            return await k_Service.CallModuleEndpointAsync<StartRaceResponse>(MODULE, STARTRACE,
                   new Dictionary<string, object>() { { "startRaceRequest", startRaceRequest } });
        }
        public async Task SendRaceResults(RaceResult raceResultData)
        {
            await k_Service.CallModuleEndpointAsync(MODULE, RACE_RESULTS,
                 new Dictionary<string, object>() { { "raceResultData", raceResultData } });
        }

        public async Task<SetVenueNameResponse> SetVenueName(VenueRegistrationRequest _venueData)
        {
           return await k_Service.CallModuleEndpointAsync<SetVenueNameResponse>(MODULE, SET_VENUE_NAME,
                                new Dictionary<string, object>() { { "venueData", _venueData } });
        }
    }
}
